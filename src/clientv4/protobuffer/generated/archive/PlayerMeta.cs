// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace generated.archive
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PlayerMeta : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static PlayerMeta GetRootAsPlayerMeta(ByteBuffer _bb) { return GetRootAsPlayerMeta(_bb, new PlayerMeta()); }
  public static PlayerMeta GetRootAsPlayerMeta(ByteBuffer _bb, PlayerMeta obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PlayerMeta __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PlayerId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Uuid { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUuidBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetUuidBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetUuidArray() { return __p.__vector_as_array<byte>(6); }
  public string Nickname { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNicknameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNicknameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNicknameArray() { return __p.__vector_as_array<byte>(8); }
  public string Password { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPasswordBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetPasswordBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetPasswordArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<generated.archive.PlayerMeta> CreatePlayerMeta(FlatBufferBuilder builder,
      ulong player_id = 0,
      StringOffset uuidOffset = default(StringOffset),
      StringOffset nicknameOffset = default(StringOffset),
      StringOffset passwordOffset = default(StringOffset)) {
    builder.StartTable(4);
    PlayerMeta.AddPlayerId(builder, player_id);
    PlayerMeta.AddPassword(builder, passwordOffset);
    PlayerMeta.AddNickname(builder, nicknameOffset);
    PlayerMeta.AddUuid(builder, uuidOffset);
    return PlayerMeta.EndPlayerMeta(builder);
  }

  public static void StartPlayerMeta(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddPlayerId(FlatBufferBuilder builder, ulong playerId) { builder.AddUlong(0, playerId, 0); }
  public static void AddUuid(FlatBufferBuilder builder, StringOffset uuidOffset) { builder.AddOffset(1, uuidOffset.Value, 0); }
  public static void AddNickname(FlatBufferBuilder builder, StringOffset nicknameOffset) { builder.AddOffset(2, nicknameOffset.Value, 0); }
  public static void AddPassword(FlatBufferBuilder builder, StringOffset passwordOffset) { builder.AddOffset(3, passwordOffset.Value, 0); }
  public static Offset<generated.archive.PlayerMeta> EndPlayerMeta(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<generated.archive.PlayerMeta>(o);
  }
}


static public class PlayerMetaVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*PlayerId*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyString(tablePos, 6 /*Uuid*/, false)
      && verifier.VerifyString(tablePos, 8 /*Nickname*/, false)
      && verifier.VerifyString(tablePos, 10 /*Password*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
